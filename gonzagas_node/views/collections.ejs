<main class="collection-page">
  <div class="container">
    <div class="collection-header">
      <div class="collection-title">
        <h1>Gallery</h1>
        <div class="geometric-divider">
          <span></span>
          <span></span>
          <span></span>
        </div>
      </div>
    </div>
    
    <% if (images && images.length > 0) { %>
      <div class="gallery-grid">
        <% images.forEach(image => { %>
          <div class="gallery-item">
            <div class="gallery-image-container">
              <img 
                src="<%= image.url %>" 
                alt="<%= image.filename.replace(/\.[^/.]+$/, '') %>"
                loading="lazy"
                class="gallery-image"
              >
            </div>
          </div>
        <% }); %>
      </div>
    <% } else { %>
      <div class="no-images">
        <p>No images found in the gallery.</p>
      </div>
    <% } %>
  </div>
</main>
<style>
/* Gallery Page */
.collection-page {
  padding: 2rem 0;
  min-height: 70vh;
  background-color: var(--color-primary);
}

.collection-header {
  text-align: center;
  padding: 2rem 0 3rem;
  margin-bottom: 2rem;
}

.collection-title h1 {
  font-size: 2.5rem;
  color: var(--color-text);
  margin-bottom: 1rem;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.geometric-divider {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  margin-top: 1rem;
}

.geometric-divider span {
  display: inline-block;
  width: 8px;
  height: 8px;
  background-color: var(--color-accent);
  transform: rotate(45deg);
}

.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 1.5rem;
  padding: 0 1rem;
}

.gallery-item {
  overflow: hidden;
  border-radius: 8px;
  box-shadow: var(--shadow-md);
  transition: transform 0.3s var(--transition-medium), 
              box-shadow 0.3s var(--transition-medium);
  background-color: var(--color-secondary);
  aspect-ratio: 1 / 1;
}

.gallery-item:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg);
}

.gallery-image-container {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.gallery-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s var(--transition-medium);
}

.gallery-item:hover .gallery-image {
  transform: scale(1.05);
}

.no-images {
  text-align: center;
  padding: 3rem 1rem;
  background-color: var(--color-secondary);
  border-radius: 8px;
  box-shadow: var(--shadow-sm);
}

.no-images p {
  color: var(--color-text-muted);
  font-size: 1.1rem;
  margin: 0;
}

/* Responsive styles */
@media (max-width: 1024px) {
  .gallery-grid {
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  }
}

@media (max-width: 768px) {
  .collection-page {
    padding: 1.5rem 0;
  }
  
  .collection-title h1 {
    font-size: 2.2rem;
  }
  
  .gallery-grid {
    gap: 1.25rem;
    padding: 0 0.75rem;
  }
}

@media (max-width: 576px) {
  .gallery-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 0.75rem;
    padding: 0 0.5rem;
  }
  
  .collection-title h1 {
    font-size: 2rem;
  }
  
  .geometric-divider {
    margin-top: 0.75rem;
  }
  
  .geometric-divider span {
    width: 6px;
    height: 6px;
  }
}

@media (max-width: 400px) {
  .gallery-grid {
    grid-template-columns: 1fr;
  }
}
</style>
